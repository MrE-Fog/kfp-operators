apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  annotations:
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Downloads a message and
      prints it. The exit handler will run after the pipeline finishes (successfully
      or not).", "inputs": [{"default": "gs://ml-pipeline-playground/shakespeare1.txt",
      "name": "url"}], "name": "Exit Handler"}'
  generateName: exit-handler-
spec:
  arguments:
    parameters:
    - name: url
      value: gs://ml-pipeline-playground/shakespeare1.txt
  entrypoint: exit-handler
  onExit: echo
  serviceAccountName: pipeline-runner
  templates:
  - container:
      args:
      - echo "$0"
      - exit!
      command:
      - sh
      - -c
      image: library/bash:4.4.23
      volumeMounts:
      - mountPath: /output
        name: output
      - mountPath: /tmp
        name: tmp
    name: echo
    outputs:
      artifacts:
      - name: mlpipeline-ui-metadata
        path: /output/mlpipeline-ui-metadata.json
      - name: mlpipeline-metrics
        path: /output/mlpipeline-metrics.json
    volumes:
    - emptyDir: {}
      name: output
    - emptyDir: {}
      name: tmp
  - container:
      args:
      - echo "$0"
      - '{{inputs.parameters.gcs-download-data}}'
      command:
      - sh
      - -c
      image: library/bash:4.4.23
      volumeMounts:
      - mountPath: /output
        name: output
      - mountPath: /tmp
        name: tmp
    inputs:
      parameters:
      - name: gcs-download-data
    name: echo-2
    outputs:
      artifacts:
      - name: mlpipeline-ui-metadata
        path: /output/mlpipeline-ui-metadata.json
      - name: mlpipeline-metrics
        path: /output/mlpipeline-metrics.json
    volumes:
    - emptyDir: {}
      name: output
    - emptyDir: {}
      name: tmp
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: url
            value: '{{inputs.parameters.url}}'
        name: exit-handler-1
        template: exit-handler-1
    inputs:
      parameters:
      - name: url
    name: exit-handler
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: gcs-download-data
            value: '{{tasks.gcs-download.outputs.parameters.gcs-download-data}}'
        dependencies:
        - gcs-download
        name: echo-2
        template: echo-2
      - arguments:
          parameters:
          - name: url
            value: '{{inputs.parameters.url}}'
        name: gcs-download
        template: gcs-download
    inputs:
      parameters:
      - name: url
    name: exit-handler-1
  - container:
      args:
      - gsutil cat $0 | tee $1
      - '{{inputs.parameters.url}}'
      - /tmp/results.txt
      command:
      - sh
      - -c
      image: google/cloud-sdk:216.0.0
      volumeMounts:
      - mountPath: /output
        name: output
      - mountPath: /tmp
        name: tmp
    inputs:
      parameters:
      - name: url
    name: gcs-download
    outputs:
      artifacts:
      - name: mlpipeline-ui-metadata
        path: /output/mlpipeline-ui-metadata.json
      - name: mlpipeline-metrics
        path: /output/mlpipeline-metrics.json
      - name: gcs-download-data
        path: /tmp/results.txt
      parameters:
      - name: gcs-download-data
        valueFrom:
          path: /tmp/results.txt
    volumes:
    - emptyDir: {}
      name: output
    - emptyDir: {}
      name: tmp
