apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  annotations:
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Download two messages
      in parallel and prints the concatenated result.", "inputs": [{"default": "gs://ml-pipeline-playground/shakespeare1.txt",
      "name": "url1"}, {"default": "gs://ml-pipeline-playground/shakespeare2.txt",
      "name": "url2"}], "name": "Parallel pipeline"}'
  generateName: parallel-pipeline-
spec:
  arguments:
    parameters:
    - name: url1
      value: gs://ml-pipeline-playground/shakespeare1.txt
    - name: url2
      value: gs://ml-pipeline-playground/shakespeare2.txt
  entrypoint: parallel-pipeline
  serviceAccountName: pipeline-runner
  templates:
  - container:
      args:
      - 'echo "Text 1: $0"; echo "Text 2: $1"'
      - '{{inputs.parameters.gcs-download-data}}'
      - '{{inputs.parameters.gcs-download-2-data}}'
      command:
      - sh
      - -c
      image: library/bash:4.4.23
      volumeMounts:
      - mountPath: /output
        name: output
      - mountPath: /tmp
        name: tmp
    inputs:
      parameters:
      - name: gcs-download-2-data
      - name: gcs-download-data
    name: echo
    outputs:
      artifacts:
      - name: mlpipeline-ui-metadata
        path: /output/mlpipeline-ui-metadata.json
      - name: mlpipeline-metrics
        path: /output/mlpipeline-metrics.json
    volumes:
    - emptyDir: {}
      name: output
    - emptyDir: {}
      name: tmp
  - container:
      args:
      - gsutil cat $0 | tee $1
      - '{{inputs.parameters.url1}}'
      - /tmp/results.txt
      command:
      - sh
      - -c
      image: google/cloud-sdk:216.0.0
      volumeMounts:
      - mountPath: /output
        name: output
      - mountPath: /tmp
        name: tmp
    inputs:
      parameters:
      - name: url1
    name: gcs-download
    outputs:
      artifacts:
      - name: mlpipeline-ui-metadata
        path: /output/mlpipeline-ui-metadata.json
      - name: mlpipeline-metrics
        path: /output/mlpipeline-metrics.json
      - name: gcs-download-data
        path: /tmp/results.txt
      parameters:
      - name: gcs-download-data
        valueFrom:
          path: /tmp/results.txt
    volumes:
    - emptyDir: {}
      name: output
    - emptyDir: {}
      name: tmp
  - container:
      args:
      - gsutil cat $0 | tee $1
      - '{{inputs.parameters.url2}}'
      - /tmp/results.txt
      command:
      - sh
      - -c
      image: google/cloud-sdk:216.0.0
      volumeMounts:
      - mountPath: /output
        name: output
      - mountPath: /tmp
        name: tmp
    inputs:
      parameters:
      - name: url2
    name: gcs-download-2
    outputs:
      artifacts:
      - name: mlpipeline-ui-metadata
        path: /output/mlpipeline-ui-metadata.json
      - name: mlpipeline-metrics
        path: /output/mlpipeline-metrics.json
      - name: gcs-download-2-data
        path: /tmp/results.txt
      parameters:
      - name: gcs-download-2-data
        valueFrom:
          path: /tmp/results.txt
    volumes:
    - emptyDir: {}
      name: output
    - emptyDir: {}
      name: tmp
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: gcs-download-2-data
            value: '{{tasks.gcs-download-2.outputs.parameters.gcs-download-2-data}}'
          - name: gcs-download-data
            value: '{{tasks.gcs-download.outputs.parameters.gcs-download-data}}'
        dependencies:
        - gcs-download
        - gcs-download-2
        name: echo
        template: echo
      - arguments:
          parameters:
          - name: url1
            value: '{{inputs.parameters.url1}}'
        name: gcs-download
        template: gcs-download
      - arguments:
          parameters:
          - name: url2
            value: '{{inputs.parameters.url2}}'
        name: gcs-download-2
        template: gcs-download-2
    inputs:
      parameters:
      - name: url1
      - name: url2
    name: parallel-pipeline
